{"version":3,"sources":["components/MsgStatus.module.css","components/config.js","components/socket.io-clientConfig.js","components/SocketConnections.js","components/BackgroundClickAnimation.js","components/header.js","components/Calls.js","components/Status.js","webpack:///./src/assets/person.svg?c1bb","components/ProfilePic.js","components/formatTime.js","components/MsgStatus.js","components/ChatContainer.js","components/Chats.js","components/Body.js","components/MenuContainer.js","components/MsgBox.js","components/Room.js","assets/createChat.svg","components/Block.js","components/DirectAccess.js","assets/addGroup.svg","components/Contacts.js","components/AvailableChats.js","components/WorkerEnabler.js","components/WorkerCountUnSeenMSG.js","components/WelcomePage.js","components/EnterEmail.js","components/EnterNameAndDp.js","App.js","serviceWorker.js","index.js","assets/person.svg","components/SocketConnections.module.css"],"names":["module","exports","config","production","server","local","socketAddess","socket","socketIoClient","SocketConnections","props","useEffect","emit","email","on","data","console","log","newRoomsMessages","JSON","parse","stringify","roomsMessagesRef","current","roomId","list","push","msgData","setRoomsMessages","modifiedNewMsgCount","newMSGCountRef","setNewMSGCount","senderId","type","timestamp","Date","now","contact","_id","setContacts","contactsRef","concat","lastMessageData","roomsMessages","React","createElement","className","styles","socketMSG","BackgroundClickAnimation","initialValue","transition","transform","opacity","finalValue","currentStyle","setCurrentStyle","useState","isObjectSame","obj1","obj2","ans","key","setTimeout","clicked","setClicked","style","Header","allowClick","setAllowClick","clicked1","setClicked1","clicked2","setClicked2","clicked3","setClicked3","headerRef","useRef","spanStyle","marginLeft","headerStyle","y","setHeaderRefInApp","accessJWTTokken","axios","defaults","withCredentials","headers","common","ref","onClick","openMenu","scrollTo","bool","Calls","height","background","scrollSnapAlign","scrollSnapStop","paddingTop","Status","_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","SvgPerson","_ref","svgRef","title","viewBox","width","fill","d","ForwardRef","forwardRef","ProfilePic","Person","formatTime","daysPassed","getTime","date","getDate","month","getMonth","year","getFullYear","slice","hrs","getHours","amOrPm","min","getMinutes","MsgStatus","Fragment","msgTimestamp","seen","doubleBlueTick","received","doubleTick","sent","singleTick","pending","ChatContainer","tag","setTag","undefined","setDate","Router","Link","to","name","replace","RegExp","setselectedRoomRecipientData","recipientId","setSelectedRoom_id","newMSGCount","join","userData","paddingLeft","lastMessage","boolean","Chats","contacts","chatsRef","setchatsRef","keys","sort","map","obj","index","msg","selectedRoomRecipientData","selectedRoom_id","Body","bodyRef","shareRef","setchatsRefForBody","scrolled","MenuContainer","menuClass","setMenuClass","logoutReq","e","stopPropagation","post","then","result","window","location","reload","catch","err","MsgBox","messageOwnerChanged","ReactHtmlParser","Room","x","setX","createX","setCreateX","inputHeight","setInputHeight","offSetForMSGHeight","setOffSetForMSGHeight","inputRef","MesssagesRef","contentEditableRef","msgValueRef","lastMSGFrom","lastMSGIntoView","scrollHeight","senderEmail","receiverId","gridTemplateRows","history","back","ContentEditable","innerRef","html","onChange","value","clientHeight","onFocus","sendMSG","senderName","receiverEmail","focus","Block","zIndex","blockStyle","SvgCreateChat","DirectAccess","CreateChat","setOpenAvailableChats","SvgAddGroup","Contacts","openChatRoom","countUnseenMSG","constructor","worker","Worker","code","toString","substring","indexOf","lastIndexOf","blob","Blob","URL","createObjectURL","onmessage","modifiedRoomsMessages","counter","roomOpenedTimestamp","postMessage","AvailableChats","setEmail","createRoom","setCreateRoom","createRoomAddress","getContactsAddress","saveContact","reAuthorizationCheckAndConfig","roomCreated","toUpperCase","alert","prompt","openAvailableChats","ob1","ob2","modifiedContacts","setUserData","removeListener","AddGroup","id","WelcomePage","setAgreed","EnterEmail","showOTPBox","setShowOTPBox","showPWDBox","setShowPWDBox","disabled","setDisabled","otp","setOtp","PWD","setPWD","PWDConfirm","setPWDConfirm","emailInputRef","otpInputRef","PWDRef","PWDConfirmRef","requestMailAddress","verifyOTPAddress","loginAddress","handleRequest","keyCode","handlServerRequest","verified","registered","logedIn","setAccessJWTTokken","signedJWT","setRegistered","OTPsent","select","placeholder","onKeyDown","EnterNameAndDp","setName","registrationAddress","saveUserMetaDataAddress","enterNameRef","saveUserMetaDataFunc","saved","src","require","alt","App","setBodyRef","scrollX","setScrollX","setMarginLeft","showMenu","setMenu","chatsRefForBody","marginTop","setMarginTop","setHeaderRef","agreed","openAvailableChatsRef","selectedRoomRecipientDataRef","createBrowserHistory","bodyDRef","isURLSet","scrollAnime","scrollSnapType","clearInterval","start","scrollLeft","distance","clientWidth","pix","check","setInterval","Math","abs","round","document","documentElement","pathname","isRootPath","match","goBack","addEventListener","scrollWidth","removeEventListener","lastScrolledTopValue","scrollTimer","clearTimeout","scrollTop","checkURLAndSetAppState","isReloaded","performance","info","navigation","a","authorize","authorizeAddress","get","pwd","val","rooms","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","process","href","origin","fetch","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c532bdfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleBlueTick\":\"MsgStatus_doubleBlueTick__3A1lY\",\"doubleTick\":\"MsgStatus_doubleTick__kK2bX\",\"singleTick\":\"MsgStatus_singleTick__3yxxg\",\"pending\":\"MsgStatus_pending__2y4Pj\"};","const config = {\r\n    production: true,\r\n    // server: 'https://whatsapplookalike.onrender.com',\r\n    server: 'https://whatsapp.onrender.com',\r\n    local: 'http://localhost:3000'\r\n}\r\n\r\nexport default config","import socketIoClient from 'socket.io-client'\r\nimport config from './config'\r\n\r\nconst socketAddess = config.production ? config.server : 'http://localhost:3000'\r\nconst socket = socketIoClient(socketAddess)\r\n\r\nexport default socket","import React, {useEffect} from 'react'\r\nimport socket from './socket.io-clientConfig'\r\nimport styles from './SocketConnections.module.css'\r\n\r\nexport default function SocketConnections(props) {\r\n\r\n  const connectSocket = () => {\r\n    socket.emit('joinRoom', props.email)\r\n\r\n    socket.on('msgFromServer', data => {\r\n      console.log(data)\r\n      let newRoomsMessages = JSON.parse(JSON.stringify(props.roomsMessagesRef.current))\r\n      newRoomsMessages[data.roomId].list.push(data.msgData)\r\n      props.setRoomsMessages(newRoomsMessages)\r\n      // alert('received')\r\n      const modifiedNewMsgCount = JSON.parse(JSON.stringify(props.newMSGCountRef.current))\r\n      console.log(\"modifiedNewMsgCount\", modifiedNewMsgCount)\r\n      modifiedNewMsgCount[data.roomId]++ \r\n\r\n      props.setNewMSGCount(modifiedNewMsgCount)\r\n      \r\n      socket.emit('msgStatusToServer',{roomId: data.roomId, senderId: data.msgData.senderId, type: 'received', timestamp: Date.now()})\r\n\r\n    })\r\n\r\n    socket.on('newChat', data => {\r\n      console.log(data)\r\n      socket.emit('joinRoom', data.contact._id)\r\n\r\n      props.setContacts(props.contactsRef.current.concat(data.contact))\r\n\r\n      let newRoomsMessages = JSON.parse(JSON.stringify(props.roomsMessagesRef.current))\r\n      newRoomsMessages[data.contact._id] = {}\r\n      newRoomsMessages[data.contact._id].list = [data.contact.lastMessageData]\r\n      props.setRoomsMessages(newRoomsMessages)\r\n\r\n    })\r\n\r\n    socket.on('msgStatus', data => {\r\n      // alert('new msg status',data)\r\n      const roomsMessages = JSON.parse(JSON.stringify(props.roomsMessagesRef.current))\r\n      if(roomsMessages[data.roomId]) {\r\n        roomsMessages[data.roomId][data.type] = data.timestamp \r\n        props.setRoomsMessages(roomsMessages)\r\n      }\r\n    })\r\n\r\n    console.log(\"socket connection established\")\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    connectSocket()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n      if(props._id)\r\n        socket.emit('joinRoom', props._id)\r\n  }, [props._id])\r\n  return (\r\n    <div className={styles.socketMSG}>\r\n      Socket Connected..\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport './BackgroundClickAnimation.css'\r\n\r\nexport default function BackgroundClickAnimation(props) {\r\n\r\n    const initialValue = {\r\n        transition: '0s',\r\n        transform: 'scale(1)',\r\n        opacity: 1\r\n    }\r\n    const finalValue = {\r\n        transform: 'scale(10)',\r\n        opacity: 0,\r\n        transition: '1s'\r\n    }\r\n\r\n    const [currentStyle, setCurrentStyle] = useState(finalValue)\r\n\r\n    const isObjectSame = (obj1, obj2) => {\r\n        let ans = true\r\n        for(let key in obj1) {\r\n            ans &= (obj1[key] === obj2[key])\r\n        }\r\n        return ans\r\n    }\r\n    useEffect(() => {\r\n        // console.log(currentStyle)\r\n        if(isObjectSame(currentStyle, initialValue))\r\n            setTimeout(() => {\r\n                setCurrentStyle(finalValue)\r\n            }, 0); \r\n    }, [currentStyle])\r\n\r\n    useEffect(() => {\r\n        if(props.clicked) {\r\n            setCurrentStyle(initialValue)\r\n            props.setClicked(false)\r\n        }\r\n    }, [props.clicked])\r\n    return (\r\n        <div className=\"circularClickAnimationContainer\">\r\n            <div className={'circularBody'} style={currentStyle}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport './header.css'\r\nimport axios from 'axios'\r\nimport BackgroundClickAnimation from './BackgroundClickAnimation'\r\n\r\nexport default function Header(props) {\r\n    const [allowClick, setAllowClick] = useState(false)\r\n    const [clicked1, setClicked1] = useState(false)\r\n    const [clicked2, setClicked2] = useState(false)\r\n    const [clicked3, setClicked3] = useState(false)\r\n    const headerRef = useRef()\r\n    let spanStyle = {\r\n        marginLeft: props.marginLeft + \"%\",\r\n    }\r\n    let headerStyle = {\r\n        transform: `translate(0px,${props.y}px)`\r\n    }\r\n    const openMenu = () => {\r\n        if(allowClick)\r\n            props.openMenu(true)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setAllowClick(true)\r\n        props.setHeaderRefInApp(headerRef)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n    if(props.accessJWTTokken)\r\n    {\r\n        axios.defaults.withCredentials = true\r\n        axios.defaults.headers.common['Authorization'] = \"bearer \" + props.accessJWTTokken\r\n    }\r\n    }, [props.accessJWTTokken])\r\n     \r\n    return (\r\n        <div>\r\n            <div className=\"header\" style={headerStyle} ref={headerRef}>\r\n                <div className=\"menu\">\r\n                    <div className=\"brandName\">WhatsApp</div>\r\n                    <div><i className=\"icon-search\"></i></div>\r\n                    <div onClick={openMenu}><i className=\"vertical-menu\"></i></div>\r\n                </div>\r\n                <div className=\"options\">\r\n                    <div><i className=\"icon-camera\"></i></div>\r\n                    <div onClick={() => {props.scrollTo(0); setClicked1(true)}}>CHATS\r\n                        <BackgroundClickAnimation clicked={clicked1} setClicked={bool => setClicked1(bool)}/>\r\n                    </div>\r\n                    <div onClick={() => {props.scrollTo(1); setClicked2(true)}}>STATUS\r\n                        <BackgroundClickAnimation  clicked={clicked2} setClicked={bool => setClicked2(bool)}/>\r\n                    </div>\r\n                    <div onClick={() => {props.scrollTo(2); setClicked3(true)}}>CALLS\r\n                        <BackgroundClickAnimation  clicked={clicked3} setClicked={bool => setClicked3(bool)}/>\r\n                    </div>\r\n                </div>\r\n                <span className=\"indicator\" style={spanStyle}></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Calls() {\r\n    const callStyle = {\r\n        height: \"calc(100vh - 50px)\",\r\n        background: \"pink\",\r\n        scrollSnapAlign: \"start\",\r\n        scrollSnapStop: \"always\",\r\n        paddingTop: \"60px\"\r\n\r\n    }\r\n    return (\r\n        <div style={callStyle}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Status() {\r\n    const statusStyle = {\r\n        height: \"calc(100vh - 50px)\",\r\n        background: \"orange\",\r\n        scrollSnapAlign: \"start\",\r\n        scrollSnapStop: \"always\",\r\n        paddingTop: \"60px\"\r\n    }\r\n    return (\r\n        <div style={statusStyle}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nconst SvgPerson = _ref => {\n  let {\n    svgRef,\n    title,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 212 212\",\n    width: 212,\n    height: 212,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DFE5E7\",\n    className: \"background\",\n    d: \"M106.251.5C164.653.5 212 47.846 212 106.25S164.653 212 106.25 212C47.846 212 .5 164.654.5 106.25S47.846.5 106.251.5z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    className: \"primary\",\n    d: \"M173.561 171.615a62.767 62.767 0 0 0-2.065-2.955 67.7 67.7 0 0 0-2.608-3.299 70.112 70.112 0 0 0-3.184-3.527 71.097 71.097 0 0 0-5.924-5.47 72.458 72.458 0 0 0-10.204-7.026 75.2 75.2 0 0 0-5.98-3.055c-.062-.028-.118-.059-.18-.087-9.792-4.44-22.106-7.529-37.416-7.529s-27.624 3.089-37.416 7.529c-.338.153-.653.318-.985.474a75.37 75.37 0 0 0-6.229 3.298 72.589 72.589 0 0 0-9.15 6.395 71.243 71.243 0 0 0-5.924 5.47 70.064 70.064 0 0 0-3.184 3.527 67.142 67.142 0 0 0-2.609 3.299 63.292 63.292 0 0 0-2.065 2.955 56.33 56.33 0 0 0-1.447 2.324c-.033.056-.073.119-.104.174a47.92 47.92 0 0 0-1.07 1.926c-.559 1.068-.818 1.678-.818 1.678v.398c18.285 17.927 43.322 28.985 70.945 28.985 27.678 0 52.761-11.103 71.055-29.095v-.289s-.619-1.45-1.992-3.778a58.346 58.346 0 0 0-1.446-2.322zM106.002 125.5c2.645 0 5.212-.253 7.68-.737a38.272 38.272 0 0 0 3.624-.896 37.124 37.124 0 0 0 5.12-1.958 36.307 36.307 0 0 0 6.15-3.67 35.923 35.923 0 0 0 9.489-10.48 36.558 36.558 0 0 0 2.422-4.84 37.051 37.051 0 0 0 1.716-5.25c.299-1.208.542-2.443.725-3.701.275-1.887.417-3.827.417-5.811s-.142-3.925-.417-5.811a38.734 38.734 0 0 0-1.215-5.494 36.68 36.68 0 0 0-3.648-8.298 35.923 35.923 0 0 0-9.489-10.48 36.347 36.347 0 0 0-6.15-3.67 37.124 37.124 0 0 0-5.12-1.958 37.67 37.67 0 0 0-3.624-.896 39.875 39.875 0 0 0-7.68-.737c-21.162 0-37.345 16.183-37.345 37.345 0 21.159 16.183 37.342 37.345 37.342z\"\n  })));\n};\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgPerson, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/person.a8f61b5a.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport './ProfilePic.css'\r\nimport {ReactComponent as Person} from '../assets/person.svg'\r\nexport default function ProfilePic() {\r\n    const logo = \"svg\"\r\n\r\n    return (\r\n        <div className={\"bgStyle\"}>\r\n            {\r\n                logo === \"svg\" ?\r\n                <Person /> :\r\n                <img className=\"defaultImg\" src={require('../assets/person.svg')} alt=\"profile pic\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","const formatTime = (timestamp) => {\r\n    const timeElapsed = Date.now() - new Date(timestamp).getTime()\r\n    const daysPassed = (timeElapsed/(100*60*60*24))\r\n    if(daysPassed >= 2) {\r\n        let date = new Date(timestamp).getDate() \r\n        date = date / 10 >= 1 ? date : '0' + date  \r\n        let month = new Date(timestamp).getMonth()\r\n        month = month / 10 >= 1 ? month : '0' + month  \r\n        const year = JSON.stringify(new Date(timestamp).getFullYear()).slice(0,2)\r\n        return (`${date}/${month}/${year}`)\r\n    } else if(daysPassed >= 1) {\r\n        return ('Yesterday')\r\n    } else {\r\n        let hrs = new Date(timestamp).getHours()\r\n        const amOrPm = hrs/12 < 1 ? 'am' : 'pm'\r\n        hrs = hrs%13 ? hrs%13 : 1 \r\n        hrs = hrs / 10 >= 1 ? hrs : '0' + hrs\r\n        let min = new Date(timestamp).getMinutes()\r\n        min = min / 10 >= 1 ? min : '0' + min\r\n        return (hrs + ':' + min + ' ' + amOrPm)\r\n    }\r\n}\r\n\r\nexport default formatTime","import React from 'react'\r\nimport style from './MsgStatus.module.css'\r\n\r\nexport default function MsgStatus(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                new Date(props.msgTimestamp).getTime() <= new Date(props.seen).getTime() ? \r\n                <div className={style.doubleBlueTick}/> :\r\n                new Date(props.msgTimestamp).getTime() <= new Date(props.received).getTime() ?\r\n                    <div className={style.doubleTick}/> :\r\n                    new Date(props.msgTimestamp).getTime() <= new Date(props.sent).getTime() ?\r\n                        <div className={style.singleTick}/> :\r\n                        <div className={style.pending}/>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport \"./ChatContainer.css\"\r\nimport ProfilePic from './ProfilePic'\r\nimport formatTime from './formatTime'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport BackgroundClickAnimation from './BackgroundClickAnimation'\r\nimport MsgStatus from './MsgStatus'\r\n\r\nexport default function ChatContainer(props) {\r\n    const [tag, setTag] = useState(undefined)\r\n    const [date, setDate] = useState(undefined)\r\n    const [clicked, setClicked] = useState(false)\r\n    useEffect(() => {\r\n        if(props.date) {\r\n            setDate(formatTime(props.date))\r\n    }})\r\n    return (\r\n        <div className=\"ChatContainer\">\r\n            <ProfilePic />\r\n            <Router> \r\n                <Link to={\"/whatsapp-look-alike/\" + (props.name).replace(new RegExp(' ', 'g'), \"-\")}  onClick={() => {props.setselectedRoomRecipientData({_id: props.recipientId, name: props.name, email: props.email}); props.setSelectedRoom_id(props.roomId);setClicked(true)}}>\r\n                    <div>\r\n                        <div className=\"name\">{props.name}</div>\r\n                        <div className={[\"date\", props.newMSGCount ? \"newMSGColor\" : null].join(\" \") }>{date}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"lastMessage\">\r\n                            {\r\n                                props.userData._id == props.senderId ? <MsgStatus seen={props.seen} received={props.received} sent={props.sent} msgTimestamp={props.date} newMSGCount={props.newMSGCount}/> : null\r\n                            }\r\n                            <span style={{paddingLeft: \"5px\"}}>{props.lastMessage.replace(/<\\/*div>/g,\" \")}</span>\r\n                        </div>\r\n                        <div className=\"tag\">\r\n                            {props.newMSGCount ? <div className={'newMSG'}>{props.newMSGCount}</div> : null}\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </Router>\r\n            <BackgroundClickAnimation clicked={clicked} setClicked={boolean => setClicked(boolean)}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport ChatContainer from './ChatContainer'\r\nimport './Chats.css'\r\nexport default function Chats(props) {\r\n\r\n    const [contacts, setContacts] = useState([])\r\n    const chatsRef  = useRef()\r\n\r\n    useEffect(()=> {\r\n       props.setchatsRef(chatsRef)\r\n       console.log(\"from chats\", props.roomsMessages)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(props.contacts.length && Object.keys(props.contacts[0].lastMessageData).length)\r\n            setContacts(props.contacts.sort((obj1, obj2) => {return new Date(obj1.lastMessageData.timestamp).getTime() < new Date(obj2.lastMessageData.timestamp).getTime() ? 1 : -1}))\r\n    }, [props.contacts])\r\n     \r\n    return (\r\n        <div ref={chatsRef} className={\"chatsContainer\"}>\r\n            {\r\n                contacts.map((obj, index) => {\r\n                    return (<ChatContainer key={index} roomId={obj._id} recipientId={obj.recipientId} name={obj.name} email={obj.email} date={obj.lastMessageData.timestamp} lastMessage={obj.lastMessageData.msg} setselectedRoomRecipientData={selectedRoomRecipientData => props.setselectedRoomRecipientData(selectedRoomRecipientData)}  setSelectedRoom_id={selectedRoom_id => props.setSelectedRoom_id(selectedRoom_id)} seen={obj.seen} received={obj.received} sent={obj.sent} userData={props.userData} senderId={obj.lastMessageData.senderId} newMSGCount={obj.newMSGCount}/>)\r\n                })\r\n            }\r\n            <div>Tap and hold on chat for more option</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef, useEffect, useState} from 'react'\r\nimport Calls from './Calls'\r\nimport Status from './Status'\r\nimport Chats from './Chats'\r\nimport './Body.css'\r\n\r\nexport default function Body(props) {\r\n    const bodyRef = useRef()\r\n    const [chatsRef, setchatsRef] = useState()\r\n\r\n    useEffect(() => {\r\n        props.shareRef(bodyRef)\r\n        if(chatsRef)\r\n            props.setchatsRefForBody(chatsRef)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={\"body\"} ref={bodyRef}>\r\n            <Chats setchatsRef={chatsRef => setchatsRef(chatsRef)} scrolled={props.scrolled} setselectedRoomRecipientData={selectedRoomRecipientData => props.setselectedRoomRecipientData(selectedRoomRecipientData)}  setSelectedRoom_id={selectedRoom_id => props.setSelectedRoom_id(selectedRoom_id)} contacts={props.contacts} userData={props.userData}/>\r\n            <Status />\r\n            <Calls />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport config from './config'\r\nimport './menu.css'\r\nexport default function MenuContainer(props) {\r\n\r\n    const [allowClick, setAllowClick] = useState(false)\r\n    const [menuClass, setMenuClass] = useState(\"\")\r\n\r\n    const logoutReq = (config.production ? config.server : config.local) + '/logout'\r\n\r\n    const closeMenu = ()=> {\r\n        if(allowClick)\r\n        {\r\n            setMenuClass(\"menuCardFull menuCardFullHide\")\r\n            setTimeout(() => {\r\n                setMenuClass(\"\") \r\n                setAllowClick(true)\r\n                props.openMenu(false)\r\n            }, 295);\r\n        }\r\n        setAllowClick(false)\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.stopPropagation()\r\n        console.log(\"logging out\")\r\n        axios.post(logoutReq, {}, {withCredentials: true}).then(result => {\r\n            console.log(result)\r\n            window.location.reload()\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setMenuClass(\"\")\r\n        setTimeout(() => {\r\n            setMenuClass(props.menuClass)\r\n        }, 10);\r\n    },[props.menuClass])\r\n\r\n    useEffect(()=> {\r\n        setAllowClick(true)\r\n        setMenuClass(\"\") \r\n    },[])\r\n\r\n    return (\r\n        <div className=\"menuContainer\" onClick={() => closeMenu()}>\r\n            <div className={\"menuCard \" + menuClass}>\r\n                <div className=\"MenuList\">\r\n                    <span >New group</span>\r\n                    <span>New broadcast</span>\r\n                    <span>WhatsApp web</span>\r\n                    <span>Starred messages</span>\r\n                    <span>Settings</span>\r\n                    <span onClick={logout}>Log out</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport formatTime from './formatTime'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport MsgStatus from './MsgStatus'\r\n\r\nexport default function MsgBox(props) {\r\n\r\n    // const [msgStatus, setMsgStatus] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     if(props.selectedRoom_id) {\r\n    //         console.log(\"room msgStatus\", props.msgStatusRef.current)\r\n    //         const tempMsgSatus = {}\r\n    //         tempMsgSatus.seen = new Date(props.msgStatusRef.current[props.selectedRoom_id].seen).getTime()\r\n    //         tempMsgSatus.received = new Date(props.msgStatusRef.current[props.selectedRoom_id].received).getTime()\r\n    //         tempMsgSatus.sent = new Date(props.msgStatusRef.current[props.selectedRoom_id].sent).getTime()\r\n\r\n    //         setMsgStatus(tempMsgSatus)\r\n    //     }\r\n    // }, [props.msgStatusRef, props.selectedRoom_id])\r\n    \r\n    return (\r\n        <div className={['msgBox ', props.obj.senderId === props.userData._id ? 'sent' : props.obj.senderId === 'bot1' ? 'bot1' : 'received', props.messageOwnerChanged ? 'marginTop' : null].join(' ')}>\r\n            <div>{ReactHtmlParser(props.obj.msg)}</div>\r\n            <div>\r\n                <div>{formatTime(props.obj.timestamp)}</div>\r\n                {\r\n                    props.obj.senderId == props.userData._id ?\r\n                        <MsgStatus msgTimestamp={props.obj.timestamp} seen={props.seen} received={props.received} sent={props.sent}/>\r\n                        // new Date(props.obj.timestamp).getTime() <= new Date(props.seen).getTime() ? \r\n                        //     <div className={'doubleBlueTick msgStatus'}/> :\r\n                        //     new Date(props.obj.timestamp).getTime() <= new Date(props.received).getTime() ?\r\n                        //         <div className={'doubleTick msgStatus'}/> :\r\n                        //         new Date(props.obj.timestamp).getTime() <= new Date(props.sent).getTime() ?\r\n                        //             <div className={'singleTick msgStatus'}/> :\r\n                        //             <div className={'pending msgStatus'}/>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>     \r\n    )\r\n}\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport './Room.css'\r\nimport ProfilePic from './ProfilePic'\r\nimport socket from './socket.io-clientConfig'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport formatTime from './formatTime'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport MsgBox from './MsgBox'\r\n\r\nexport default function Room(props) {\r\n    const [x, setX] = useState(100)\r\n    const [createX, setCreateX] = useState(100)\r\n    const [inputHeight, setInputHeight] = useState(\"60px\")\r\n    const [offSetForMSGHeight, setOffSetForMSGHeight] = useState(115)\r\n    // const [msgStatus, setMsgStatus] = useState({})\r\n\r\n    const inputRef = useRef()\r\n    const MesssagesRef = useRef()\r\n    const contentEditableRef = useRef()\r\n    const msgValueRef = useRef(\"\")\r\n    let lastMSGFrom\r\n    let messageOwnerChanged = false\r\n\r\n    useEffect(() => {\r\n        console.log('props.selectedRoom_id', props.selectedRoom_id)\r\n        if(props.selectedRoomRecipientData._id)\r\n        {    \r\n            setX(0)\r\n            setCreateX(0)\r\n        }\r\n        else\r\n        {    \r\n            setX(100)\r\n            setCreateX(100)\r\n        }\r\n    }, [props.selectedRoomRecipientData])\r\n\r\n    const goBack =()=> {\r\n        props.setSelectedRoom_id(undefined)\r\n        props.setselectedRoomRecipientData({})\r\n        window.history.back()\r\n    }\r\n\r\n    const lastMSGIntoView = () => {\r\n        if(MesssagesRef.current)\r\n            MesssagesRef.current.scrollTo(0, MesssagesRef.current.scrollHeight)\r\n    }\r\n    const sendMSG = ()=> {\r\n        if(props.selectedRoom_id) {\r\n            let msgData = {\r\n                msg: msgValueRef.current,\r\n                senderId: props.userData._id,\r\n                senderName: props.userData.name,\r\n                timestamp: Date.now()\r\n                }\r\n            socket.emit('msgToServer', {\r\n                msgData,\r\n                roomId: props.selectedRoom_id,\r\n                receiverEmail: props.selectedRoomRecipientData.email,\r\n                senderEmail: props.userData.email\r\n            })\r\n            let roomsMessages = JSON.parse(JSON.stringify(props.roomsMessagesRef.current))\r\n            roomsMessages[props.selectedRoom_id].list.push(msgData)\r\n            console.log('roomsMessages', roomsMessages)\r\n            props.setRoomsMessages(roomsMessages)\r\n            msgValueRef.current = \"\"\r\n            setOffSetForMSGHeight(115)\r\n            lastMSGIntoView()\r\n            contentEditableRef.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        lastMSGIntoView()\r\n    }, [props.roomsMessagesRef.current,x,offSetForMSGHeight])\r\n\r\n    const handleChange = e => {\r\n        msgValueRef.current = e.target.value\r\n        console.log(msgValueRef.current, \"inputHeight\", inputHeight)\r\n        setInputHeight(inputRef.current.clientHeight + 15 + \"px\")\r\n        setOffSetForMSGHeight(inputRef.current.clientHeight + 70)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.selectedRoom_id && props.selectedRoomRecipientData.email)\r\n        console.log(\"from room\",props.roomsMessagesRef.current[props.selectedRoom_id].list.slice(-1)[0].senderId)\r\n        if(props.selectedRoom_id && props.roomsMessagesRef.current[props.selectedRoom_id].list.slice(-1)[0].senderId != props.userData._id && props.selectedRoomRecipientData.email)\r\n            socket.emit('msgStatusToServer',{roomId: props.selectedRoom_id, senderEmail: props.selectedRoomRecipientData.email, type: 'seen', timestamp: Date.now(), receiverId: props.userData._id})\r\n    }, [props.roomsMessagesRef.current,props.selectedRoom_id,props.selectedRoomRecipientData])\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className={\"room\"} style={{transform: `translate(${x}%,0px)`, gridTemplateRows: `55px auto ${inputHeight}`}}>\r\n            <div className=\"background-image\"></div>\r\n            <div className={\"roomHeader\"}>\r\n                <div className={\"back\"} onClick={() => goBack()}><i className=\"return\" /></div>\r\n                <div className=\"picContainer\">\r\n                    <ProfilePic />\r\n                </div>\r\n                <div className={\"name\"}>{props.selectedRoomRecipientData._id ? props.selectedRoomRecipientData.name : null}</div>\r\n                <div className=\"videoCall\" ><i className=\"video-call\" /></div>\r\n                <div className=\"audioCall\" ><i className=\"call\" /></div>\r\n                <div className=\"menu-room\"><i className=\"vertical-menu\" /></div>\r\n            </div>\r\n            <div ref={MesssagesRef} className={\"messages\"} style={{height: `calc(100vh - ${offSetForMSGHeight}px)`}}>\r\n                {\r\n                    props.selectedRoom_id ? props.roomsMessagesRef.current[props.selectedRoom_id].list.map((obj, index) => {\r\n                        messageOwnerChanged = lastMSGFrom === obj.senderId ? false : true\r\n                        lastMSGFrom = obj.senderId\r\n                        return (\r\n                            <MsgBox key={index} userData={props.userData} selectedRoom_id={props.selectedRoom_id} obj={obj} messageOwnerChanged={messageOwnerChanged} seen={props.roomsMessagesRef.current[props.selectedRoom_id].seen}  received={props.roomsMessagesRef.current[props.selectedRoom_id].received}  sent={props.roomsMessagesRef.current[props.selectedRoom_id].sent}/>\r\n                        )\r\n                    }) : null\r\n                }\r\n            </div>\r\n        </div>\r\n        <div ref={inputRef} className={\"create\"} style={{transform: `translate(${createX}%,0px)`}}>\r\n            <div className=\"chatInput\">\r\n                <div className=\"emoji\"><i /></div>\r\n                <ContentEditable innerRef={contentEditableRef} className=\"input\" html={msgValueRef.current} onChange={handleChange} onFocus={() => {setTimeout(() => {\r\n                    lastMSGIntoView()\r\n                }, 1000);}}></ContentEditable>\r\n                <div className=\"attachment\"><i /></div>\r\n                <div className=\"camera\"><i /></div>\r\n            </div>\r\n            {/* <div className=\"microphone\"><i /></div> */}\r\n            <div className=\"send\" onClick={() => sendMSG()}><i /></div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nconst SvgCreateChat = _ref => {\n  let {\n    svgRef,\n    title,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z\"\n  })));\n};\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgCreateChat, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/createChat.22024c00.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport './Block.css'\r\nexport default function Block(props) {\r\n    let style = {\r\n        zIndex: props.blockStyle.zIndex, \r\n        opacity: props.blockStyle.opacity\r\n    }\r\n    return (\r\n        <div style={style} className=\"block\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\n\r\nimport {ReactComponent as CreateChat} from '../assets/createChat.svg'\r\nimport './DirectAccess.css'\r\n\r\nexport default function DirectAccess(props) {\r\n    return (\r\n        <Router>\r\n            <Link to=\"/whatsapp-look-alike/select-contact-for-chatting\"  className=\"directAccess\">\r\n                <CreateChat className=\"createChat\" onClick={() => props.setOpenAvailableChats(true)}/>\r\n            </Link>\r\n        </Router>\r\n    )\r\n}\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nconst SvgAddGroup = _ref => {\n  let {\n    svgRef,\n    title,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    width: 32,\n    height: 32,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M15.313 15.672c2.401 0 4.237-1.835 4.237-4.235S17.713 7.2 15.313 7.2s-4.235 1.836-4.235 4.237 1.834 4.235 4.235 4.235zm9.349-.64c1.571 0 2.773-1.201 2.773-2.772 0-1.571-1.202-2.773-2.773-2.773s-2.772 1.202-2.772 2.773c0 1.571 1.201 2.772 2.772 2.772zm-1.724 5.841a7.856 7.856 0 0 0-.889-1.107 8.074 8.074 0 0 0-1.825-1.413 9.05 9.05 0 0 0-.675-.346l-.021-.009c-1.107-.502-2.5-.851-4.232-.851-1.732 0-3.124.349-4.232.851l-.112.054a9.247 9.247 0 0 0-.705.374 8.137 8.137 0 0 0-1.705 1.341 7.991 7.991 0 0 0-.656.773 8.584 8.584 0 0 0-.233.334c-.063.095-.116.184-.164.263l-.012.02a4.495 4.495 0 0 0-.213.408v2.276h16.061v-2.276s-.07-.164-.225-.427a4.257 4.257 0 0 0-.162-.265zm1.724-4.357c-1.333 0-2.376.3-3.179.713a9.409 9.409 0 0 1 1.733 1.218c1.402 1.25 1.959 2.503 2.017 2.641l.021.049h4.954v-1.571s-1.294-3.05-5.546-3.05zM9.41 13.78H6.261v-3.152H4.344v3.152H1.2v1.918h3.144v3.145h1.917v-3.145H9.41V13.78z\"\n  })));\n};\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgAddGroup, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/addGroup.ba736b1e.svg\";\nexport { ForwardRef as ReactComponent };","// imported in AvailableChats.js to show all contacts\r\nimport React, {useState} from 'react'\r\nimport BackgroundClickAnimation from './BackgroundClickAnimation'\r\nimport {ReactComponent as Person} from '../assets/person.svg'\r\n\r\nexport default function Contacts(props) {\r\n\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    return (\r\n        <div className=\"savedContacts\">\r\n            <span><Person className=\"Person\"/></span>\r\n            <div onClick={() => {props.openChatRoom(props.obj._id); setClicked(true)}}>\r\n                <span>{props.obj.name}</span>\r\n                <span>whatever</span>\r\n            </div>\r\n            <BackgroundClickAnimation  clicked={clicked} setClicked={boolean => setClicked(boolean)}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './Room.css'\r\nimport './AvailableChats.css'\r\nimport {ReactComponent as AddGroup} from '../assets/addGroup.svg'\r\nimport socket from './socket.io-clientConfig'\r\nimport Contacts from './Contacts'\r\nimport BackgroundClickAnimation from './BackgroundClickAnimation'\r\nimport config from './config'\r\nimport WorkerEnabler from './WorkerEnabler'\r\nimport WorkerCountUnSeenMSG from './WorkerCountUnSeenMSG'\r\nconst countUnseenMSG = new WorkerEnabler(WorkerCountUnSeenMSG)\r\n\r\nexport default function AvailableChats(props) {\r\n\r\n    const [clicked, setClicked] = useState(false)\r\n    const [email, setEmail] = useState(undefined)\r\n    const [createRoom, setCreateRoom] = useState(false)\r\n    const [contacts, setContacts] = useState([])\r\n    const createRoomAddress = config.production ? config.server + '/createRoom' : 'http://localhost:3000/createRoom'\r\n\r\n    const getContactsAddress = config.production ? config.server + '/getContacts' : 'http://localhost:3000/getContacts'\r\n\r\n    const sortAndSetArrayElement = (contact)=> {\r\n        setContacts(contacts.concat(contact).sort((obj1, obj2) => {return obj1.name.toUpperCase() < obj2.name.toUpperCase() ? 1 : -1}))\r\n    }\r\n\r\n    const saveContact = ()=> {\r\n        if(email)\r\n        {\r\n            let data = {}\r\n            data.email = email\r\n            if(email !== props.email) {\r\n                axios.post(createRoomAddress,data)\r\n                .then(result => {\r\n                    if(props.reAuthorizationCheckAndConfig(result)) {\r\n                        saveContact()\r\n                        return null\r\n                    }\r\n                    if(result.data.roomCreated) {\r\n                        console.log(result)\r\n                        setEmail(undefined)\r\n                        setCreateRoom(false)\r\n                        \r\n                        props.setContacts(props.contacts.concat(result.data.contact))\r\n                        sortAndSetArrayElement(result.data.contact)\r\n\r\n                        let modifiedRoomsMessages =  JSON.parse(JSON.stringify(props.roomsMessages))\r\n                        modifiedRoomsMessages[result.data.contact._id].list = [result.data.contact.lastMessageData]\r\n                        props.setRoomsMessages(modifiedRoomsMessages)\r\n\r\n                        socket.emit('joinRoom', result.data.contact._id)\r\n                        return null\r\n                    }\r\n                    alert(result.data.msg)\r\n                    console.log(result.data.msg)\r\n                })\r\n            } else {\r\n                alert(email + \" is your email\")\r\n                setEmail(undefined)\r\n                setCreateRoom(false)\r\n            }\r\n            \r\n        } else {\r\n            console.log(\"email is not defined\")\r\n            setCreateRoom(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        saveContact()\r\n    }, [email])\r\n\r\n    useEffect(() => {\r\n        if(!email && createRoom)\r\n            setEmail(prompt(\"Enter email to save contact\"))\r\n    }, [createRoom])\r\n\r\n    let style = {\r\n        transform: props.openAvailableChats ? `translate(0px,0px)` : `translate(100%,0px)` \r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post(getContactsAddress).then(result => {\r\n            const {contacts, roomsMessages, userData} = result.data\r\n\r\n            console.log(\"get contacts\", result)\r\n            setContacts(contacts.sort((ob1, ob2) => {return ob1.name.toUpperCase() > ob2.name.toUpperCase() ? 1 : -1}))\r\n\r\n            const modifiedRoomsMessages = {}\r\n\r\n            let modifiedContacts = contacts.map(obj => {\r\n\r\n                modifiedRoomsMessages[obj._id] = {\r\n                    seen: obj.seen,\r\n                    received: obj.received,\r\n                    sent: obj.sent,\r\n                    list: roomsMessages[obj._id]\r\n                }\r\n\r\n                obj['lastMessageData'] = roomsMessages[obj._id][roomsMessages[obj._id].length - 1]\r\n                if(!obj.seen || obj.lastMessageData.timestamp > obj.seen)\r\n                    socket.emit('msgStatusToServer',{roomId: obj._id, senderEmail: obj.email, type: 'received', timestamp: Date.now()})\r\n\r\n                return obj\r\n            })\r\n\r\n            countUnseenMSG.postMessage({modifiedRoomsMessages, userData})\r\n\r\n            console.log('modifiedContacts', modifiedContacts)\r\n            // props.setMsgStatus(objectForMsgStatus)\r\n            props.setContacts(modifiedContacts)\r\n            \r\n            // modifiedRoomsMessages.list = result.data.roomsMessages \r\n            props.setRoomsMessages(modifiedRoomsMessages)\r\n            props.setUserData(result.data.userData)\r\n            contacts.map(obj => {\r\n                socket.emit('joinRoom',obj._id)\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const closeAvailableChats = ()=> {\r\n        // props.setOpenAvailableChats(false)\r\n        window.history.back()   \r\n    }\r\n\r\n    const openChatRoom = ()=> {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        countUnseenMSG.onmessage = e => {\r\n            console.log(\"from Worker : \", e.data)\r\n            props.setNewMSGCount(e.data)\r\n        }\r\n        return () => {\r\n            countUnseenMSG.removeListener('message')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"room AvailableChats\" style={style}>\r\n            <div className=\"menu\">\r\n                <div className={\"s\"} onClick={() => closeAvailableChats()}><i className=\"return\" /></div>\r\n                <div className=\"a\">\r\n                    <span>Select contact</span>\r\n                    <span>{contacts.length} contacts</span>\r\n                </div>\r\n                <div><i className=\"icon-search\"></i></div>\r\n                <div><i className=\"vertical-menu\"></i></div>\r\n            </div>\r\n            <div className=\"contacts\">\r\n                <div className=\"newGroup\">\r\n                    <span><AddGroup className=\"AddGroup\"/></span>\r\n                    <p>New Group</p>\r\n                </div>\r\n                <div className=\"newGroup\" onClick={() => {setClicked(true);setCreateRoom(true)}}>\r\n                    <span><AddGroup className=\"AddGroup\"/></span>\r\n                    <p>New Contact</p>\r\n                    <BackgroundClickAnimation  clicked={clicked} setClicked={boolean => setClicked(boolean)}/>\r\n                </div>\r\n                {\r\n                    contacts.map((obj, index) => {\r\n                        return (\r\n                            <Contacts key={index} obj={obj} openChatRoom={id => openChatRoom(id)}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export default class WebWorkerEnabler{\r\n    constructor(worker) {\r\n        if(window.Worker) {\r\n            console.log(\"Worker is supported in your browser\")\r\n            let code = worker.toString()\r\n            code = code.substring(code.indexOf('{') + 1, code.lastIndexOf('}'))\r\n     \r\n            const blob = new Blob([code], { type: 'application/javascript' })\r\n            return new Worker(URL.createObjectURL(blob))\r\n        } else {\r\n            console.log(\"Worker is not supported in your browser\")\r\n        }\r\n       \r\n    }\r\n}\r\n    ","export default function WorkerCountUnseenMSG() {\r\n    this.onmessage = e => {\r\n        // this is where code our logic\r\n        console.log(\"roomsMessages \", e.data.modifiedRoomsMessages)\r\n        let counter = {}\r\n        for(const key in e.data.modifiedRoomsMessages) {\r\n            counter[key] = 0\r\n            let i = e.data.modifiedRoomsMessages[key].list.length\r\n            while(\r\n                (e.data.modifiedRoomsMessages[key].list[--i].senderId != e.data.userData._id) && \r\n                (new Date(e.data.modifiedRoomsMessages[key].list[i].timestamp).getTime() >= new Date(e.data.modifiedRoomsMessages[key].roomOpenedTimestamp).getTime()))\r\n                counter[key]++\r\n        }\r\n\r\n        this.postMessage(counter) // through this method we send our response\r\n    }\r\n}","import React from 'react'\r\nimport './WelcomePage.css'\r\nimport './Button.css'\r\n\r\nexport default function WelcomePage(props) {\r\n    return (\r\n        <div className=\"WelcomePage\">\r\n            <h1>Welcome to WhatsApp</h1>\r\n            <div>\r\n                <span></span>\r\n            </div>\r\n            <p>Read our <span>Privacy Policy</span>. Tap \"Agree and continue\" to accept the <span>Terms of Service</span>.</p>\r\n            <button onClick={() => props.setAgreed(true)}>AGREE AND CONTINUE</button>\r\n            <footer>\r\n                from\r\n                <span>FACEBOOK</span>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport './EnterEmail.css'\r\nimport './Button.css'\r\nimport config from './config'\r\n\r\nexport default function EnterEmail(props) {\r\n    const [email, setEmail] = useState(null)\r\n    const [showOTPBox, setShowOTPBox] = useState(false)\r\n    const [showPWDBox, setShowPWDBox] = useState(false)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [otp, setOtp] = useState(undefined)\r\n    const [PWD, setPWD] = useState(undefined)\r\n    const [PWDConfirm, setPWDConfirm] = useState(undefined)\r\n    const emailInputRef = useRef()\r\n    const otpInputRef = useRef()\r\n    const PWDRef = useRef()\r\n    const PWDConfirmRef = useRef()\r\n\r\n    const requestMailAddress = (config.production ? config.server : config.local) + '/requestMail'\r\n    const verifyOTPAddress = (config.production ? config.server : config.local) + '/verifyOTP'\r\n    const loginAddress = (config.production ? config.server : config.local) + '/login'\r\n\r\n    const handleRequest = (e) => {\r\n        //e.preventDefault()\r\n        // console.log(e.key)\r\n        if(e.key === \"Enter\" || e.keyCode === 13) {\r\n            handlServerRequest(e)\r\n        }\r\n    }\r\n\r\n    const handlServerRequest = (e) => {\r\n        //e.preventDefault(e)\r\n        setDisabled(true)\r\n\r\n        let data = {}\r\n        data.to = email\r\n        if (!showOTPBox && !showPWDBox) {\r\n            axios.post(requestMailAddress, data, { withCredentials: true }).then(result => {\r\n                setDisabled(false)\r\n                if(result.data.registered) {\r\n                    setShowPWDBox(true)\r\n                    props.setRegistered(true)\r\n                }\r\n                else if (result.data.OTPsent) {\r\n                    setShowOTPBox(true)\r\n                } else {\r\n                    //alert(\"message not sent try again\")\r\n                    //emailInputRef.current.focus()\r\n                }\r\n            })\r\n        } else if(showOTPBox && !showPWDBox){\r\n            data.email = email\r\n            data.otp = otp\r\n            axios.post(verifyOTPAddress, data, { withCredentials: true }).then(result => {\r\n                setDisabled(false)\r\n                if (result.data.verified) {\r\n                    setShowPWDBox(true)\r\n                } else {\r\n                    //alert(result.data.msg)\r\n                    //otpInputRef.current.focus()\r\n                }\r\n            })\r\n        } else {\r\n            if(props.registered) {\r\n                data.email = email\r\n                data.PWD = PWD\r\n                axios.post(loginAddress, data, { withCredentials: true})\r\n                    .then(result => {\r\n                        if(result.data.logedIn)\r\n                        {\r\n                            props.setAccessJWTTokken(result.data.signedJWT)\r\n                            props.setEmail(email)\r\n                            props.setPWD('userPassword')\r\n                        } else {\r\n                            //alert(\"Either password or email is wrong\")\r\n                            setDisabled(false)\r\n                            //PWDRef.current.focus()\r\n                        }\r\n                    }).catch(err => {\r\n                        console.log(err)\r\n                        //alert(\"something went wrong\")\r\n                        setDisabled(false)\r\n                        //PWDRef.current.focus()\r\n                    })\r\n            }\r\n            else if(PWD === PWDConfirm) {\r\n                props.setEmail(email)\r\n                props.setPWD(PWD)\r\n            } else {\r\n                setDisabled(false)\r\n                //alert(\"password doesnot match\")\r\n                //PWDConfirmRef.current.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(showOTPBox) {\r\n            otpInputRef.current.select()\r\n            otpInputRef.current.focus()\r\n        }\r\n        else if(showPWDBox) {\r\n            PWDRef.current.select()\r\n            PWDRef.current.focus()\r\n        }\r\n        else {\r\n            emailInputRef.current.select()\r\n            emailInputRef.current.focus()\r\n        }\r\n    }, [disabled,showOTPBox, showPWDBox,])\r\n     \r\n    return (\r\n        <div className=\"EnterEmail\">\r\n            <h2>Enter Your E-mail</h2>\r\n            <p>WhatsApp will send an E-mail to verify your email. <span>What's my email?</span></p>\r\n            <input \r\n                ref={emailInputRef} \r\n                type=\"email\" \r\n                placeholder=\"email\" \r\n                onChange={e => setEmail(e.target.value)} \r\n                disabled={showOTPBox || disabled || showPWDBox} \r\n                onKeyDown={handleRequest}\r\n            />\r\n            {showOTPBox ? \r\n                <input \r\n                    ref={otpInputRef} \r\n                    type=\"number\" \r\n                    placeholder=\"enter OTP\" \r\n                    onChange={e => setOtp(e.target.value)}  \r\n                    disabled={disabled || showPWDBox}\r\n                    onKeyDown={handleRequest}\r\n                /> : null}\r\n\r\n            {showPWDBox ? \r\n                <div className={\"PWDContainer\"}>\r\n                    <br />\r\n                    <p>Enter password</p>\r\n\r\n                     <input \r\n                        ref={PWDRef} \r\n                        type=\"password\" \r\n                        min=\"6\" \r\n                        placeholder=\"password\" \r\n                        onChange={e => setPWD(e.target.value)}  \r\n                        disabled={disabled}\r\n                        onKeyDown={handleRequest}\r\n                    />\r\n\r\n                     {props.registered ? null \r\n                        : <input \r\n                            ref={PWDConfirmRef} \r\n                            type=\"password\" \r\n                            placeholder=\"confirm password\" \r\n                            onChange={e => setPWDConfirm(e.target.value)}  \r\n                            disabled={disabled}\r\n                            onKeyDown={handleRequest}\r\n                        />}\r\n                </div> : null}\r\n            <button onClick={handlServerRequest} disabled={disabled}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport './EnterNameAndDp.css'\r\nimport './EnterEmail.css'\r\nimport config from './config'\r\n\r\nexport default function EnterNameAndDp(props) {\r\n    const [name, setName] = useState(undefined)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [registered, setRegistered] = useState(false)\r\n    \r\n    const registrationAddress = config.production ? config.server + '/register' : 'http://localhost:3000/register'\r\n\r\n    const saveUserMetaDataAddress = config.production ? config.server + '/saveUserMetaData' : 'http://localhost:3000/saveUserMetaData'\r\n    const enterNameRef = useRef()\r\n    let data = {}\r\n\r\n    const saveUserMetaDataFunc = ()=> {\r\n        axios.post(saveUserMetaDataAddress, {}, { withCredentials: true })\r\n        .then(result => {\r\n            setDisabled(false)\r\n            if(result.data.saved) {\r\n                props.setPWD('userPassword')\r\n                props.setRegistered(true)\r\n            } else {\r\n                alert(result.data.msg + \"try one more time\")\r\n            }\r\n        }).catch(err => {\r\n            setDisabled(false)\r\n            console.log(err)\r\n            alert(\"error occured try again\")\r\n        })\r\n    }\r\n    const setUserInDB = () => {\r\n        setDisabled(true)\r\n        data.name = name\r\n        data.email = props.email\r\n        data.PWD = props.PWD\r\n        axios.post(registrationAddress, data, { withCredentials: true })\r\n        .then(result => {\r\n            if(result.data.registered) {\r\n                console.log('registered')\r\n                props.setAccessJWTTokken(result.data.signedJWT)\r\n                axios.defaults.headers.common['Authorization'] = \"bearer \" + result.data.signedJWT\r\n                setRegistered(result.data.registered)\r\n                saveUserMetaDataFunc()\r\n            } else {\r\n                setDisabled(false)\r\n                alert(result.data.msg)\r\n                enterNameRef.current.focus()\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            setDisabled(false)\r\n            alert(\"something went wrong try again\")\r\n            enterNameRef.current.focus()\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(enterNameRef)\r\n            enterNameRef.current.focus()\r\n    }, [])\r\n    return (\r\n        <div className=\"EnterEmail EnterNameAndDp\">\r\n            <h2>Profile info</h2>\r\n            <p>Please provide your name and an optional profile photo</p>\r\n            <div className=\"imgContainer\">\r\n                <img className=\"defaultImg\" src={require('../assets/person.svg')} alt=\"profile pic\"/>\r\n            </div>\r\n            <input ref={enterNameRef} disabled={disabled} type=\"text\" name=\"name\" onChange={e => setName(e.target.value)}/>\r\n            <button onClick={() => registered ? saveUserMetaDataFunc() : setUserInDB()} disabled={disabled}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { createBrowserHistory } from 'history'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport SocketConnections from './components/SocketConnections'\r\nimport Header from './components/header'\r\nimport Body from './components/Body';\r\nimport MenuContainer from './components/MenuContainer';\r\nimport Room from './components/Room';\r\nimport Block from './components/Block';\r\nimport DirectAccess from './components/DirectAccess';\r\nimport AvailableChats from './components/AvailableChats';\r\nimport WelcomePage from './components/WelcomePage';\r\nimport EnterEmail from './components/EnterEmail';\r\nimport EnterNameAndDp from './components/EnterNameAndDp';\r\nimport socket from './components/socket.io-clientConfig'\r\nimport config from './components/config'\r\n\r\nfunction App() {\r\n\r\n  const [bodyRef, setBodyRef] = useState(null)\r\n  const [scrollX, setScrollX] = useState(0)\r\n  const [marginLeft, setMarginLeft] = useState(10)\r\n  const [showMenu, setMenu] = useState(false)\r\n  const [menuClass, setMenuClass] = useState('menuCard')\r\n  const [chatsRefForBody, setchatsRefForBody] = useState()\r\n  const [marginTop, setMarginTop] = useState(0)\r\n  const [headerRef, setHeaderRef] = useState()\r\n  const [agreed, setAgreed] = useState(false)\r\n  const [registered, setRegistered] = useState(false)\r\n  const [accessJWTTokken, setAccessJWTTokken] = useState(undefined)\r\n  //to send open room chat data\r\n  const [selectedRoomRecipientData, setselectedRoomRecipientData] = useState({})\r\n  const [selectedRoom_id, setSelectedRoom_id] = useState(undefined)\r\n  const [userData, setUserData] = useState({})\r\n  // open available chats\r\n  const [openAvailableChats, setOpenAvailableChats] = useState(false)\r\n\r\n  const [email, setEmail] = useState(undefined)\r\n  const [PWD, setPWD] = useState(undefined)\r\n  const [contacts, setContacts] = useState([])\r\n  const [roomsMessages, setRoomsMessages] = useState([])\r\n  const [newMSGCount, setNewMSGCount] = useState({})\r\n\r\n  const openAvailableChatsRef = useRef(openAvailableChats)\r\n  const selectedRoomRecipientDataRef = useRef(selectedRoomRecipientData)\r\n  let history = createBrowserHistory()\r\n  const bodyDRef = useRef(bodyRef)\r\n  const roomsMessagesRef = useRef()\r\n  const contactsRef = useRef()\r\n  const isURLSet = useRef(false)\r\n  const newMSGCountRef = useRef(newMSGCount)\r\n  const scrollTo = (i) => {\r\n    bodyDRef.current.style.scrollSnapType = \"none\"\r\n    let scrollAnime;\r\n\r\n    if (scrollAnime)\r\n      clearInterval(scrollAnime)\r\n\r\n    let start = bodyDRef.current.scrollLeft\r\n    const end = i * bodyDRef.current.clientWidth\r\n    const distance = end - start\r\n    const pix = distance / 5\r\n    let check = 0;\r\n\r\n    if (bodyDRef.current) {\r\n      scrollAnime = setInterval(() => {\r\n        start += pix\r\n        setScrollX(start)\r\n        check += pix\r\n        if (Math.abs(check) >= Math.abs(distance)) {\r\n          clearInterval(scrollAnime)\r\n          bodyDRef.current.style.scrollSnapType = \"x mandatory\"\r\n          if (bodyDRef.current.scrollLeft == 0) {\r\n          }\r\n        }\r\n      }, 1);\r\n\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (bodyDRef.current) {\r\n\r\n      const scrollLeft = Math.round(bodyDRef.current.scrollLeft)\r\n      const clientWidth = Math.round(document.documentElement.clientWidth)\r\n      const pathname = window.location.pathname\r\n      const isRootPath = pathname.match('whatsapp-look-alike/chats')\r\n\r\n      if (scrollLeft == clientWidth && !pathname.match('status')) {\r\n\r\n        console.log('status')\r\n        if (isRootPath) {\r\n          history.push(\"/whatsapp-look-alike/status\")\r\n        } else {\r\n          history.replace('/whatsapp-look-alike/status')\r\n        }\r\n\r\n      }\r\n      else if (scrollLeft == clientWidth * 2 && !pathname.match('calls')) {\r\n\r\n        console.log('calls')\r\n        if (isRootPath) {\r\n          history.push(\"/whatsapp-look-alike/calls\")\r\n        } else {\r\n          history.replace('/whatsapp-look-alike/calls')\r\n        }\r\n      }\r\n      else if (scrollLeft == 0 && !isRootPath) {\r\n        console.log(\"chats\")\r\n        history.goBack()\r\n      }\r\n    }\r\n  }, [marginLeft])\r\n\r\n  useEffect(() => {\r\n    if (bodyRef)\r\n      bodyRef.scrollTo(scrollX, 0)\r\n  }, [scrollX, bodyRef])\r\n\r\n  useEffect(() => {\r\n    bodyDRef.current = bodyRef\r\n    if (bodyRef) {\r\n      bodyRef.addEventListener('scroll', e => {\r\n        setMarginLeft(10 + (bodyRef.scrollLeft / bodyRef.scrollWidth) * 90)\r\n      })\r\n    }\r\n    // on component unmount so it doesnt update unnecessarily\r\n    return () => {\r\n      if (bodyRef)\r\n        bodyRef.removeEventListener('scroll')\r\n    }\r\n  }, [bodyRef])\r\n\r\n  useEffect(() => {\r\n    if (showMenu)\r\n      setMenuClass(\"menuCardFull\")\r\n    else\r\n      setMenuClass(\" \")\r\n  }, [showMenu])\r\n\r\n  useEffect(() => {\r\n    if (chatsRefForBody && headerRef) {\r\n      //called only once\r\n      let lastScrolledTopValue\r\n      let scrolled = 0\r\n      let scrollTimer\r\n      chatsRefForBody.addEventListener('scroll', e => {\r\n        if (scrollTimer)\r\n          clearTimeout(scrollTimer)\r\n        headerRef.style.transition = \"0ms\"\r\n        if (!lastScrolledTopValue)\r\n          lastScrolledTopValue = chatsRefForBody.scrollTop\r\n\r\n        scrolled += lastScrolledTopValue - chatsRefForBody.scrollTop\r\n        if (scrolled < -60)\r\n          scrolled = - 60\r\n        else if (scrolled > 0)\r\n          scrolled = 0\r\n        setMarginTop(scrolled)\r\n        scrollTimer = setTimeout(() => {\r\n          headerRef.style.transition = \"transform 300ms ease-in-out\"\r\n          if (scrolled < -30 && chatsRefForBody.scrollTop > 60)\r\n            scrolled = -60\r\n          else\r\n            scrolled = 0\r\n          setMarginTop(scrolled)\r\n        }, 300);\r\n        lastScrolledTopValue = chatsRefForBody.scrollTop\r\n      })\r\n    }\r\n    return () => {\r\n      if (chatsRefForBody)\r\n        chatsRefForBody.removeEventListener('scroll')\r\n    }\r\n  }, [chatsRefForBody, headerRef])\r\n\r\n\r\n  useEffect(() => {\r\n    if (headerRef && bodyRef) {\r\n      if (selectedRoomRecipientData._id || openAvailableChats) {\r\n        headerRef.style.transform = `translate(-100px,${marginTop}px)`\r\n        bodyRef.style.transform = \"translate(-100px,0px)\"\r\n      }\r\n      else {\r\n        headerRef.style.transform = `translate(0px,${marginTop}px)`\r\n        bodyRef.style.transform = \"translate(0px,0px)\"\r\n      }\r\n    }\r\n  }, [selectedRoomRecipientData, openAvailableChats])\r\n\r\n  const checkURLAndSetAppState = ()=> {\r\n    isURLSet.current = true\r\n    let isReloaded\r\n    if (window.performance) {\r\n      console.info(\"window.performance works fine on this browser\");\r\n      isReloaded =  (performance.navigation.type == 1) ? true : false\r\n      console.log(\"reloaded \", isReloaded)\r\n    }\r\n\r\n    const pathname = window.location.pathname\r\n    if(pathname.match(/whatsapp-look-alike\\/*$/))\r\n      history.replace('/whatsapp-look-alike/chats')\r\n    else if(pathname.match(/whatsapp-look-alike\\/status\\/*$/)) {\r\n      scrollTo(1)\r\n      if(!isReloaded) {\r\n        history.replace('/whatsapp-look-alike/chats')\r\n        history.push('/whatsapp-look-alike/status')\r\n      }\r\n    } else if(pathname.match(/whatsapp-look-alike\\/calls\\/*$/)) {\r\n      scrollTo(2)\r\n      if(!isReloaded) {\r\n        history.replace('/whatsapp-look-alike/chats')\r\n        history.push('/whatsapp-look-alike/calls')\r\n      }\r\n    } else if(pathname.match(/whatsapp-look-alike\\/select-contact-for-chatting\\/*$/)) {\r\n      setOpenAvailableChats(true)\r\n      if(!isReloaded) {\r\n        history.replace('/whatsapp-look-alike/chats')\r\n        history.push('/whatsapp-look-alike/select-contact-for-chatting')\r\n      }\r\n    } else if(!pathname.match(/whatsapp-look-alike\\/chats\\/*$/) || pathname.match(/whatsapp-look-alike\\/*/g).length > 1)\r\n    {\r\n      isReloaded ? history.goBack() : history.replace('/whatsapp-look-alike/chats')\r\n    }\r\n    console.log(\"if page is loading continuosly than write the folowing path after url 'whatsapp-look-alike/chats'\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(bodyDRef.current && !isURLSet.current)\r\n      checkURLAndSetAppState()\r\n  }, [bodyDRef.current])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('popstate', () => {\r\n      console.log(window.location.pathname)\r\n      let a = !(openAvailableChatsRef.current || selectedRoomRecipientDataRef.current._id)\r\n      if (window.location.pathname.match('whatsapp-look-alike/chats') && a) {\r\n        scrollTo(0)\r\n      }\r\n      setselectedRoomRecipientData({})\r\n      setOpenAvailableChats(false)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    openAvailableChatsRef.current = openAvailableChats\r\n    selectedRoomRecipientDataRef.current = selectedRoomRecipientData\r\n  }, [selectedRoomRecipientData, openAvailableChats])\r\n\r\n\r\n  // const connectSocket = () => {\r\n  //   socket.on('msgFromServer', data => {\r\n  //     console.log(data)\r\n  //     let newRoomsMessages = JSON.parse(JSON.stringify(roomsMessagesRef.current))\r\n  //     newRoomsMessages[data.roomId].push(data.msgData)\r\n  //     setRoomsMessages(newRoomsMessages)\r\n  //   })\r\n  // }\r\n\r\n  useEffect(() => {\r\n    roomsMessagesRef.current = roomsMessages\r\n  }, [roomsMessages])\r\n\r\n  useEffect(() => {\r\n    contactsRef.current = contacts\r\n  }, [contacts])\r\n\r\n  const authorize = () => {\r\n    console.log(\"called for refresh token\")\r\n    const authorizeAddress = config.production ? config.server + '/refreshToken' : 'http://localhost:3000/refreshToken'\r\n    axios.get(authorizeAddress, { withCredentials: true })\r\n      .then(result => {\r\n        console.log(\"called for refresh token\")\r\n        if (result.data.logedIn) {\r\n          console.log(\"logged in\")\r\n          setAccessJWTTokken(result.data.signedJWT)\r\n          setEmail(result.data.email)\r\n          setPWD(\"userPassword\")\r\n          setRegistered(true)\r\n          setAgreed(true)\r\n          // connectSocket()\r\n        } else {\r\n          alert(result.data.msg)\r\n        }\r\n      }).catch(err => [\r\n        console.log(err + \" login again\")\r\n      ])\r\n  }\r\n\r\n  useEffect(() => {\r\n    authorize()\r\n  }, [])\r\n\r\n  const reAuthorizationCheckAndConfig = (result) => {\r\n    if (result.data.logedIn === true) {\r\n      setAccessJWTTokken(result.data.signedJWT)\r\n      return true\r\n    } else if (result.data.logedIn === false) {\r\n      alert(result.data.msg)\r\n      setEmail(undefined)\r\n      setPWD(undefined)\r\n      setAccessJWTTokken(undefined)\r\n      setRegistered(false)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(roomsMessages)\r\n    setContacts(contacts.map(obj => {\r\n      obj['lastMessageData'] = roomsMessages[obj._id].list[roomsMessages[obj._id].list.length - 1]\r\n      obj.seen = roomsMessages[obj._id].seen\r\n      obj.received = roomsMessages[obj._id].received\r\n      obj.sent = roomsMessages[obj._id].sent\r\n      return obj\r\n    }))\r\n  }, [roomsMessages])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"new message\", newMSGCount)\r\n    newMSGCountRef.current = newMSGCount\r\n    // console.log(\"new message\", newMSGCountRef.current) \r\n    setContacts(contacts.map(obj => {\r\n      if(selectedRoomRecipientData._id == obj.recipientId && obj.newMSGCount != 0) {\r\n        obj.newMSGCount = 0\r\n        const modifiedNewMsgCount = JSON.parse(JSON.stringify(newMSGCountRef.current))\r\n        modifiedNewMsgCount[obj._id] = 0\r\n        setNewMSGCount(modifiedNewMsgCount)\r\n      }\r\n      else \r\n        obj.newMSGCount = newMSGCountRef.current[obj._id] \r\n      return obj\r\n    }))\r\n  }, [newMSGCount])\r\n\r\n  useEffect(() => {\r\n    if(selectedRoom_id && Object.keys(newMSGCountRef.current).length) {\r\n      let modifiedNewMsgCount = JSON.parse(JSON.stringify(newMSGCountRef.current))\r\n      modifiedNewMsgCount[selectedRoom_id] = 0\r\n      console.log(\"new message\", modifiedNewMsgCount)\r\n      setNewMSGCount(modifiedNewMsgCount)\r\n    }\r\n  }, [selectedRoom_id])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {agreed ? <React.Fragment>\r\n        {(email && PWD) ?\r\n          <React.Fragment>\r\n            {registered && accessJWTTokken ? null : <EnterNameAndDp accessJWTTokken={accessJWTTokken} setAccessJWTTokken={accessJWTTokken => setAccessJWTTokken(accessJWTTokken)} setRegistered={registered => setRegistered(registered)} email={email} PWD={PWD} setPWD={pwd => setPWD(pwd)} />}\r\n          </React.Fragment>\r\n          : <EnterEmail accessJWTTokken={accessJWTTokken} setAccessJWTTokken={accessJWTTokken => setAccessJWTTokken(accessJWTTokken)} registered={registered} setRegistered={registered => setRegistered(registered)} setEmail={email => setEmail(email)} setPWD={PWD => setPWD(PWD)} />}\r\n      </React.Fragment>\r\n        : <WelcomePage setAgreed={agreed => setAgreed(agreed)} />}\r\n\r\n      {registered && accessJWTTokken ? <React.Fragment>\r\n\r\n        <SocketConnections roomsMessagesRef={roomsMessagesRef} setRoomsMessages={roomsMessages => setRoomsMessages(roomsMessages)} email={email} contactsRef={contactsRef} setContacts={contacts => setContacts(contacts)} _id={userData._id} newMSGCountRef={newMSGCountRef} setNewMSGCount={newMSGCount => setNewMSGCount(newMSGCount)}/>\r\n\r\n        <Header setHeaderRefInApp={ref => setHeaderRef(ref.current)} scrollTo={scrollTo} marginLeft={marginLeft} openMenu={val => setMenu(val)} y={marginTop} accessJWTTokken={accessJWTTokken} />\r\n\r\n        <Body shareRef={ref => setBodyRef(ref.current)} setchatsRefForBody={chatsRef => setchatsRefForBody(chatsRef.current)} scrolled={marginTop} setselectedRoomRecipientData={selectedRoomRecipientData => setselectedRoomRecipientData(selectedRoomRecipientData)} setSelectedRoom_id={selectedRoom_id => setSelectedRoom_id(selectedRoom_id)} contacts={contacts} userData={userData}/>\r\n\r\n        {\r\n          showMenu ? <MenuContainer openMenu={val => setMenu(val)} menuClass={menuClass} /> : null\r\n        }\r\n\r\n        <DirectAccess setOpenAvailableChats={bool => setOpenAvailableChats(bool)} />\r\n\r\n        <Room userData={userData} selectedRoomRecipientData={selectedRoomRecipientData} setselectedRoomRecipientData={selectedRoomRecipientData => setselectedRoomRecipientData(selectedRoomRecipientData)} selectedRoom_id={selectedRoom_id} setSelectedRoom_id={selectedRoom_id => setSelectedRoom_id(selectedRoom_id)} roomsMessagesRef={roomsMessagesRef} setRoomsMessages={roomsMessages => setRoomsMessages(roomsMessages)}/>\r\n\r\n        <AvailableChats openAvailableChats={openAvailableChats} setOpenAvailableChats={bool => setOpenAvailableChats(bool)} email={email} reAuthorizationCheckAndConfig={result => reAuthorizationCheckAndConfig(result)} setContacts={contacts => setContacts(contacts)} setRoomsMessages={rooms => setRoomsMessages(rooms)} setUserData={userData =>\r\n         setUserData(userData)} contacts={contacts} roomsMessages={roomsMessages} setNewMSGCount={newMSGCount => setNewMSGCount(newMSGCount)}/>\r\n\r\n        <Block blockStyle={(selectedRoomRecipientData._id || openAvailableChats) ? { zIndex: 2, opacity: 0.6 } : { zIndex: -2, opacity: 0 }} />\r\n\r\n      </React.Fragment> : null\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/person.a8f61b5a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socketMSG\":\"SocketConnections_socketMSG__xpIQV\"};"],"sourceRoot":""}